Describe Vueim
  Before all
    let V = vital#of('vital')
    let PowerAssert = V.import('Vim.PowerAssert')
    execute PowerAssert.define("PowerAssert")
  End

  Describe g:vueim#re_style_start
    It should match style tag
      PowerAssert '<style>' =~# g:vueim#re_style_start
      PowerAssert '<style lang="stylus">' =~# g:vueim#re_style_start
      PowerAssert '<style lang="stylus" src="./app.styl"></style>' =~# g:vueim#re_style_start
    End
  End

  Describe g:vueim#re_style_start
    It should match style end tag
      PowerAssert '</style>' =~# g:vueim#re_style_end
      PowerAssert '<style lang="stylus" src="./app.styl"></style>' =~# g:vueim#re_style_start
    End
  End

  Describe g:vueim#re_src
    It should match src
      PowerAssert matchstr('<style lang="stylus" src="./app.styl"></style>', g:vueim#re_src) ==# './app.styl'
      PowerAssert matchstr('<style lang="stylus"></style>', g:vueim#re_src) ==# ''
    End
  End

  Describe vueim#re_lang
    It should match lang
      PowerAssert matchstr('<style lang="stylus" src="./app.styl"></style>', g:vueim#re_lang) ==# 'stylus'
      PowerAssert matchstr('<style src="./app.styl"></style>', g:vueim#re_lang) ==# ''
    End
  End


  Context with app.vue
    Before
      tabedit ./test/data/app.vue
    End
    After
      tabclose!
    End

    Describe vueim#get_src
      It should return src
        PowerAssert vueim#get_src('template') ==# ''
        PowerAssert vueim#get_src('script') ==# ''
        PowerAssert vueim#get_src('style') ==# './app.styl'
      End
    End

    Describe vueim#get_lang
      It should return lang
        PowerAssert vueim#get_lang('template') ==# 'jade'
        PowerAssert vueim#get_lang('script') ==# 'javascript'
        PowerAssert vueim#get_lang('style') ==# 'stylus'
      End
    End

    Describe vueim#get_content
      It should return content
        PowerAssert vueim#get_content('template') ==# ['div#app', '  h1 {{fib(100)}}']
      End
    End

    Describe vueim#edit
      It template should open a new buffer
        call vueim#edit('tabedit', 'template')
        PowerAssert getbufline('.', 1, '$') !=# []
        " PowerAssert &ft ==# 'jade'
        PowerAssert &modified ==# 0
        PowerAssert &buftype ==# 'acwrite'
      End

      It script should open a new buffer
        call vueim#edit('tabedit', 'script')
        PowerAssert getbufline('.', 1, '$') !=# []
        " PowerAssert &ft ==# 'javascript'
        PowerAssert &modified ==# 0
        PowerAssert &buftype ==# 'acwrite'
      End

      It style should open a new file
        call vueim#edit('tabedit', 'style')
        PowerAssert bufname("%") ==# './app.styl'
        PowerAssert &modified ==# 0
        PowerAssert &buftype ==# ''
      End
    End
  End

  Context vueim#lang_to_extension
    Context javascript
      It return js
        PowerAssert vueim#lang_to_extension('javascript') ==# 'js'
      End
    End

    Context stylus
      It return styl
        PowerAssert vueim#lang_to_extension('stylus') ==# 'styl'
      End
    End

    Context others
      It そのまま
        PowerAssert vueim#lang_to_extension('html') ==# 'html'
      End
    End
  End
End
